; Default configuration
;
enabled="true"

; If inheritance isn't set, and multiple configurations are enabled, an error will occur.
; inherit="default"

; Set inherited values to null
; clear=routes debug

; Routes
;routes[profile/]="profile/wall.php"
;routes[profile/(.*)/messages]="profile/messages.php"

routes[login/]="login/login.php"
routes[login/remote]="login/login.php?Remote=1"
routes[logout/]="logout/logout.php"

routes[join/]="login/login.php"
routes[join/(.*)]="login/login.php?Invite=$1"

; TEMPORARY
routes[layout/]="layout/profile.php"
routes[layout/profile]="layout/profile.php"
routes[layout/elements]="layout/elements.php"
routes[layout/admin]="layout/admin.php"
routes[layout/comments]="layout/comments.php"

; Example Routes
; --------------

; @tutorial This sets the default context for a route.  All default form data will be 
; @tutorial sent to this context, unless different context data is sent in form data.
;
; @tutorial Regular expressions are used here, and can be used in form data as well.
;
; @tutorial Context matches to:
; @tutorial
; @tutorial Example Component
; @tutorial Example Controller
; @tutorial Any Instance # at least 1 digit, no more than 2
; @tutorial Any View
; @tutorial (END OF STRING)
; contexts[/example/example.php]="example.example.(\d){1,2}.(.*)\$"

; @tutorial First look for routes without any extra data.
routes[example/]="/example/example.php"

; @tutorial Look for routes which are in /task/## format, then push the data to the cRequest class.
; @tutorial (Routing goes with the first successful match, so pay attention to the order of your routes.)
routes[example/(.*)/(.*)]="/example/example.php?Task=$1&customer_PK=$2"

; @tutorial Look for routes which are in /task/## format, then push the data to the cRequest class.
; @tutorial (Routing goes with the first successful match, so pay attention to the order of your routes.)
routes[example/(.*)/]="/example/example.php?Page=$1"

; @tutorial Last, look for /key,value/ pairs.
; @tutorial Last, look for /key,value/ pairs.
; @philosophy Less pretty for the end user, but requires less setup.
routes[example/(.*)]="/example/example.php"

; Appleseed Routes
; ----------------

[photos]
;routes[profile/(.*)/photos]="photos/sets.php"
;routes[profile/(.*)/photos/(.*)]="photos/photos.php"
;routes[profile/(.*)/photo/(.*)]="photos/photo.php"

[profile/friends]
routes[profile/(.*)/friends/request/(.*)]="profile/friends/request.php?Username=$1&Account=$2"
routes[profile/(.*)/friends/(\d+)]="profile/friends/friends.php?Username=$1&Page=$2"
routes[profile/(.*)/friends/(.*)/(\d+)]="profile/friends/friends.php?Username=$1&Circle=$2&Page=$3"
routes[profile/(.*)/friends/(.*)]="profile/friends/friends.php?Username=$1&Circle=$2"
routes[profile/(.*)/friends]="profile/friends/friends.php?Username=$1"

[profile/info]
routes[profile/(.*)/info]="profile/info.php"
routes["profile/([^/]+)/"]="profile/info.php"

[admin]
restrictions[/admin/(.*)]="admin"
restrictions[/admin]="admin"
routes[/admin]="admin/admin.php"

[admin/users]
routes[/admin/users/]="admin/users/config.php"
routes[/admin/users/config/]="admin/users/config.php"

[admin/users/access]
routes[/admin/users/access/(.*)/(.*)]="/admin/users/access.php?Task=$1&Access_PK=$2"
routes[/admin/users/access/(.*)/]="/admin/users/access.php?Page=$1"
routes[/admin/users/access/]="admin/users/access.php"
contexts[/admin/users/access.php]="adminaccess.user.(\d){1,2}.(.*)\$"

[admin/users/accounts]
routes[/admin/users/accounts/]="admin/users/accounts.php"
routes[/admin/users/accounts/(.*)]="/admin/users/accounts.php"

[admin/system]
routes[/admin/system/]="admin/system/config.php"
routes[/admin/system/config/]="admin/system/config.php"

[admin/system/nodes]
routes[/admin/system/nodes/(.*)/(.*)]="/admin/system/nodes.php?Task=$1&tID=$2"
routes[/admin/system/nodes/(.*)/]="/admin/system/nodes.php?Page=$1"
routes[/admin/system/nodes/]="admin/system/nodes.php"
contexts[/admin/system/nodes.php]="adminnodes.system.(\d){1,2}.(.*)\$"

routes[/admin/system/logs/(.*)/(.*)]="/admin/system/logs.php?Task=$1&Node_PK=$2"
routes[/admin/system/logs/(.*)/]="/admin/system/logs.php?Page=$1"
routes[/admin/system/logs/]="admin/system/logs.php"
routes[/admin/system/maintenance/]="admin/system/maintenance.php"
routes[/admin/system/update/]="admin/system/update.php"

; Pages route should be last, to catch anything that wasn't already caught.
;routes[(.*)]="/pages/pages.php"

